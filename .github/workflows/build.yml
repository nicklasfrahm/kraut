name: Build

on:
  workflow_dispatch:
  pull_request:
    branches:
      - "main"
      - "beta"
      - "alpha"
  push:
    branches:
      - "main"
      - "beta"
      - "alpha"

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.semantic.outputs.release-version }}
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Fetch version from git history
        uses: codfish/semantic-release-action@v3
        if: github.ref_protected == true
        id: semantic
        with:
          dry-run: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  binary:
    name: Binary
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Go compiler
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Download dependencies
        run: go mod download

      - name: Inject version into environment
        if: github.ref_protected == true
        run: |
          if [[ "${{ needs.prepare.outputs.new-release-published }}" == "true" ]]; then
            echo "VERSION=v${{ needs.prepare.outputs.release-version }}" >>"$GITHUB_ENV"
          fi

      - name: Build binary
        run: make build

  container:
    name: Container
    runs-on: ubuntu-latest
    needs: [prepare]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Go compiler
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Download dependencies
        run: go mod download

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.ref_protected == true
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Inject version into environment
        if: github.ref_protected == true
        run: |
          if [[ "${{ needs.prepare.outputs.new-release-published }}" == "true" ]]; then
            echo "VERSION=v${{ needs.prepare.outputs.release-version }}" >>"$GITHUB_ENV"
          fi

      - name: Build container image
        run: make docker-buildx

  release:
    name: Release
    if: github.ref_protected == true && github.event_name == 'push'
    needs: [binary,container]
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Create release
        uses: codfish/semantic-release-action@v3
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Index CRDs
        run: curl -sSL https://doc.crds.dev/github.com/${{ github.repository }}@v${{ steps.semantic.outputs.release-version }} >/dev/null
